#Carga de paquetes
library(readxl)
library(ggplot2)
source('forecastAndAggProdFunctions.R')
#---------Carga de datos
#Lee los datos del archivo de excel, en este ejemplo se saltan las primeras 10 filas pues no contienen datos relevantes,
#tambien se especifica la columna en la que se encuentran los datos
#Inputs para carga de Excel
pathArchivo="DAUPSA.xlsx"
saltos=10
columnaDatos=2
conTitulos=TRUE
#Carga de archivo e impresion de resultados
excelData <- read_excel(pathArchivo, skip = saltos, col_names = conTitulos)
print(excelData)
#-------Hacemos serie de tiempo, se debe especificar el inicio o el fin de la serie de tiempo, asi como su frecuencia,
#para esta solucion es necesario indicar el fin de la serie de tiempo.
#Inputs para creacion de serie de tiempo
frecuencia=12 #ie numero de periodos en un a単o
anoFin=2020
mesFin=7
#Creacion de serie de tiempo e impresion de resultados
tsData <- ts(excelData[,columnaDatos], end = c(anoFin,mesFin), frequency = frecuencia)
print(tsData)
#-------Realizacion del pronostico, se identifica automaticamente si es posible pronosticar con los datos cargados,
#en ese caso se selecciona el mejor metodo para realizarlo y se devuelve la serie de tiempo del pronostico
#Inputs para realizar el pronostico
horizonte=6 #ie periodos a futuro que se desean pronosticar
#Realizacion del pronostico y graficacion de resultados
fcData=forecastToh(ts=tsData,endTs = c(anoFin,mesFin),f=frecuencia,hF=horizonte)
autoplot(tsData) + xlab("Year") + ylab("Demand") +
autolayer(fcData, PI=FALSE, series = paste(fcData$method,"forecast"))
print(fcData)
#-------Construccion del plan agregado de produccion, se deben especificar los datos de produccion del periodo anterior,
#al igual que las condiciones iniciales de trabajadores, inventario y backorders, y los datos de costos de cada variable
#Inputs para realizar el plan agregado de produccion
modo=1  #el tipo de plan a realizar,
#1=base model
#2=level workforce
#3=no backorders
#4=no inventory/backorders
diasLaboralesPAnterior=260
produccionPAnterior=41383
trabajadoresPAnterior=40
vectorDiasLaborales=c(21,20,23,21,22,22)
trabajadoresIniciales=35
inventarioInicial=0
backordersInicial=0
salarios=120
costoContratar=450
costoDespedir=600
costoAlmacen=5
costoBackorder=15
costoProducir=0
#en el caso de usar el modo 2 o 3 se debe especificar la fuerza laboral
fuerzaLaboralConstante=40
#Solucion del plan de produccion e impresion
aggPlan=aggProdPlan(lambda=unlist(fcData[2], use.names=FALSE),
tPeriods=horizonte,
lDays=vectorDiasLaborales,
W0=trabajadoresIniciales,
I0=inventarioInicial,
B0=backordersInicial,
wages=salarios,
hire=costoContratar,
fire=costoDespedir,
hold=costoAlmacen,
backOrder=costoBackorder,
pCost=costoProducir,
pLastPeriod=produccionPAnterior,
wLastPeriod=trabajadoresPAnterior,
dLastPeriod=diasLaboralesPAnterior,
levelWf = fuerzaLaboralConstante,
mode = modo)
c(1:4)
c(1:4)*2
c(1:4)*2+4
4+6*c(0:5)
#Carga de paquetes
library(readxl)
library(ggplot2)
source('forecastAndAggProdFunctions.R')
#---------Carga de datos
#Lee los datos del archivo de excel, en este ejemplo se saltan las primeras 10 filas pues no contienen datos relevantes,
#tambien se especifica la columna en la que se encuentran los datos
#Inputs para carga de Excel
pathArchivo="DAUPSA.xlsx"
saltos=10
columnaDatos=2
conTitulos=TRUE
#Carga de archivo e impresion de resultados
excelData <- read_excel(pathArchivo, skip = saltos, col_names = conTitulos)
print(excelData)
#-------Hacemos serie de tiempo, se debe especificar el inicio o el fin de la serie de tiempo, asi como su frecuencia,
#para esta solucion es necesario indicar el fin de la serie de tiempo.
#Inputs para creacion de serie de tiempo
frecuencia=12 #ie numero de periodos en un a単o
anoFin=2020
mesFin=7
#Creacion de serie de tiempo e impresion de resultados
tsData <- ts(excelData[,columnaDatos], end = c(anoFin,mesFin), frequency = frecuencia)
print(tsData)
#-------Realizacion del pronostico, se identifica automaticamente si es posible pronosticar con los datos cargados,
#en ese caso se selecciona el mejor metodo para realizarlo y se devuelve la serie de tiempo del pronostico
#Inputs para realizar el pronostico
horizonte=6 #ie periodos a futuro que se desean pronosticar
#Realizacion del pronostico y graficacion de resultados
fcData=forecastToh(ts=tsData,endTs = c(anoFin,mesFin),f=frecuencia,hF=horizonte)
autoplot(tsData) + xlab("Year") + ylab("Demand") +
autolayer(fcData, PI=FALSE, series = paste(fcData$method,"forecast"))
print(fcData)
#-------Construccion del plan agregado de produccion, se deben especificar los datos de produccion del periodo anterior,
#al igual que las condiciones iniciales de trabajadores, inventario y backorders, y los datos de costos de cada variable
#Inputs para realizar el plan agregado de produccion
modo=1  #el tipo de plan a realizar,
#1=base model
#2=level workforce
#3=no backorders
#4=no inventory/backorders
diasLaboralesPAnterior=260
produccionPAnterior=41383
trabajadoresPAnterior=40
vectorDiasLaborales=c(21,20,23,21,22,22)
trabajadoresIniciales=35
inventarioInicial=0
backordersInicial=0
salarios=120
costoContratar=450
costoDespedir=600
costoAlmacen=5
costoBackorder=15
costoProducir=0
#en el caso de usar el modo 2 o 3 se debe especificar la fuerza laboral
fuerzaLaboralConstante=40
#Solucion del plan de produccion e impresion
aggPlan=aggProdPlan(lambda=unlist(fcData[2], use.names=FALSE),
tPeriods=horizonte,
lDays=vectorDiasLaborales,
W0=trabajadoresIniciales,
I0=inventarioInicial,
B0=backordersInicial,
wages=salarios,
hire=costoContratar,
fire=costoDespedir,
hold=costoAlmacen,
backOrder=costoBackorder,
pCost=costoProducir,
pLastPeriod=produccionPAnterior,
wLastPeriod=trabajadoresPAnterior,
dLastPeriod=diasLaboralesPAnterior,
levelWf = fuerzaLaboralConstante,
mode = modo)
#Carga de paquetes
library(readxl)
library(ggplot2)
source('forecastAndAggProdFunctions.R')
#---------Carga de datos
#Lee los datos del archivo de excel, en este ejemplo se saltan las primeras 10 filas pues no contienen datos relevantes,
#tambien se especifica la columna en la que se encuentran los datos
#Inputs para carga de Excel
pathArchivo="DAUPSA.xlsx"
saltos=10
columnaDatos=2
conTitulos=TRUE
#Carga de archivo e impresion de resultados
excelData <- read_excel(pathArchivo, skip = saltos, col_names = conTitulos)
print(excelData)
#-------Hacemos serie de tiempo, se debe especificar el inicio o el fin de la serie de tiempo, asi como su frecuencia,
#para esta solucion es necesario indicar el fin de la serie de tiempo.
#Inputs para creacion de serie de tiempo
frecuencia=12 #ie numero de periodos en un a単o
anoFin=2020
mesFin=7
#Creacion de serie de tiempo e impresion de resultados
tsData <- ts(excelData[,columnaDatos], end = c(anoFin,mesFin), frequency = frecuencia)
print(tsData)
#-------Realizacion del pronostico, se identifica automaticamente si es posible pronosticar con los datos cargados,
#en ese caso se selecciona el mejor metodo para realizarlo y se devuelve la serie de tiempo del pronostico
#Inputs para realizar el pronostico
horizonte=6 #ie periodos a futuro que se desean pronosticar
#Realizacion del pronostico y graficacion de resultados
fcData=forecastToh(ts=tsData,endTs = c(anoFin,mesFin),f=frecuencia,hF=horizonte)
autoplot(tsData) + xlab("Year") + ylab("Demand") +
autolayer(fcData, PI=FALSE, series = paste(fcData$method,"forecast"))
print(fcData)
#-------Construccion del plan agregado de produccion, se deben especificar los datos de produccion del periodo anterior,
#al igual que las condiciones iniciales de trabajadores, inventario y backorders, y los datos de costos de cada variable
#Inputs para realizar el plan agregado de produccion
modo=2  #el tipo de plan a realizar,
#1=base model
#2=level workforce
#3=no backorders
#4=no inventory/backorders
diasLaboralesPAnterior=260
produccionPAnterior=41383
trabajadoresPAnterior=40
vectorDiasLaborales=c(21,20,23,21,22,22)
trabajadoresIniciales=35
inventarioInicial=0
backordersInicial=0
salarios=120
costoContratar=450
costoDespedir=600
costoAlmacen=5
costoBackorder=15
costoProducir=0
#en el caso de usar el modo 2 o 3 se debe especificar la fuerza laboral
fuerzaLaboralConstante=40
#Solucion del plan de produccion e impresion
aggPlan=aggProdPlan(lambda=unlist(fcData[2], use.names=FALSE),
tPeriods=horizonte,
lDays=vectorDiasLaborales,
W0=trabajadoresIniciales,
I0=inventarioInicial,
B0=backordersInicial,
wages=salarios,
hire=costoContratar,
fire=costoDespedir,
hold=costoAlmacen,
backOrder=costoBackorder,
pCost=costoProducir,
pLastPeriod=produccionPAnterior,
wLastPeriod=trabajadoresPAnterior,
dLastPeriod=diasLaboralesPAnterior,
levelWf = fuerzaLaboralConstante,
mode = modo)
#Carga de paquetes
library(readxl)
library(ggplot2)
source('forecastAndAggProdFunctions.R')
#---------Carga de datos
#Lee los datos del archivo de excel, en este ejemplo se saltan las primeras 10 filas pues no contienen datos relevantes,
#tambien se especifica la columna en la que se encuentran los datos
#Inputs para carga de Excel
pathArchivo="DAUPSA.xlsx"
saltos=10
columnaDatos=2
conTitulos=TRUE
#Carga de archivo e impresion de resultados
excelData <- read_excel(pathArchivo, skip = saltos, col_names = conTitulos)
print(excelData)
#-------Hacemos serie de tiempo, se debe especificar el inicio o el fin de la serie de tiempo, asi como su frecuencia,
#para esta solucion es necesario indicar el fin de la serie de tiempo.
#Inputs para creacion de serie de tiempo
frecuencia=12 #ie numero de periodos en un a単o
anoFin=2020
mesFin=7
#Creacion de serie de tiempo e impresion de resultados
tsData <- ts(excelData[,columnaDatos], end = c(anoFin,mesFin), frequency = frecuencia)
print(tsData)
#-------Realizacion del pronostico, se identifica automaticamente si es posible pronosticar con los datos cargados,
#en ese caso se selecciona el mejor metodo para realizarlo y se devuelve la serie de tiempo del pronostico
#Inputs para realizar el pronostico
horizonte=6 #ie periodos a futuro que se desean pronosticar
#Realizacion del pronostico y graficacion de resultados
fcData=forecastToh(ts=tsData,endTs = c(anoFin,mesFin),f=frecuencia,hF=horizonte)
autoplot(tsData) + xlab("Year") + ylab("Demand") +
autolayer(fcData, PI=FALSE, series = paste(fcData$method,"forecast"))
print(fcData)
#-------Construccion del plan agregado de produccion, se deben especificar los datos de produccion del periodo anterior,
#al igual que las condiciones iniciales de trabajadores, inventario y backorders, y los datos de costos de cada variable
#Inputs para realizar el plan agregado de produccion
modo=3  #el tipo de plan a realizar,
#1=base model
#2=level workforce
#3=no backorders
#4=no inventory/backorders
diasLaboralesPAnterior=260
produccionPAnterior=41383
trabajadoresPAnterior=40
vectorDiasLaborales=c(21,20,23,21,22,22)
trabajadoresIniciales=35
inventarioInicial=0
backordersInicial=0
salarios=120
costoContratar=450
costoDespedir=600
costoAlmacen=5
costoBackorder=15
costoProducir=0
#en el caso de usar el modo 2 o 3 se debe especificar la fuerza laboral
fuerzaLaboralConstante=40
#Solucion del plan de produccion e impresion
aggPlan=aggProdPlan(lambda=unlist(fcData[2], use.names=FALSE),
tPeriods=horizonte,
lDays=vectorDiasLaborales,
W0=trabajadoresIniciales,
I0=inventarioInicial,
B0=backordersInicial,
wages=salarios,
hire=costoContratar,
fire=costoDespedir,
hold=costoAlmacen,
backOrder=costoBackorder,
pCost=costoProducir,
pLastPeriod=produccionPAnterior,
wLastPeriod=trabajadoresPAnterior,
dLastPeriod=diasLaboralesPAnterior,
levelWf = fuerzaLaboralConstante,
mode = modo)
#Carga de paquetes
library(readxl)
library(ggplot2)
source('forecastAndAggProdFunctions.R')
#---------Carga de datos
#Lee los datos del archivo de excel, en este ejemplo se saltan las primeras 10 filas pues no contienen datos relevantes,
#tambien se especifica la columna en la que se encuentran los datos
#Inputs para carga de Excel
pathArchivo="DAUPSA.xlsx"
saltos=10
columnaDatos=2
conTitulos=TRUE
#Carga de archivo e impresion de resultados
excelData <- read_excel(pathArchivo, skip = saltos, col_names = conTitulos)
print(excelData)
#-------Hacemos serie de tiempo, se debe especificar el inicio o el fin de la serie de tiempo, asi como su frecuencia,
#para esta solucion es necesario indicar el fin de la serie de tiempo.
#Inputs para creacion de serie de tiempo
frecuencia=12 #ie numero de periodos en un a単o
anoFin=2020
mesFin=7
#Creacion de serie de tiempo e impresion de resultados
tsData <- ts(excelData[,columnaDatos], end = c(anoFin,mesFin), frequency = frecuencia)
print(tsData)
#-------Realizacion del pronostico, se identifica automaticamente si es posible pronosticar con los datos cargados,
#en ese caso se selecciona el mejor metodo para realizarlo y se devuelve la serie de tiempo del pronostico
#Inputs para realizar el pronostico
horizonte=6 #ie periodos a futuro que se desean pronosticar
#Realizacion del pronostico y graficacion de resultados
fcData=forecastToh(ts=tsData,endTs = c(anoFin,mesFin),f=frecuencia,hF=horizonte)
autoplot(tsData) + xlab("Year") + ylab("Demand") +
autolayer(fcData, PI=FALSE, series = paste(fcData$method,"forecast"))
print(fcData)
#-------Construccion del plan agregado de produccion, se deben especificar los datos de produccion del periodo anterior,
#al igual que las condiciones iniciales de trabajadores, inventario y backorders, y los datos de costos de cada variable
#Inputs para realizar el plan agregado de produccion
modo=4  #el tipo de plan a realizar,
#1=base model
#2=level workforce
#3=no backorders
#4=no inventory/backorders
diasLaboralesPAnterior=260
produccionPAnterior=41383
trabajadoresPAnterior=40
vectorDiasLaborales=c(21,20,23,21,22,22)
trabajadoresIniciales=35
inventarioInicial=0
backordersInicial=0
salarios=120
costoContratar=450
costoDespedir=600
costoAlmacen=5
costoBackorder=15
costoProducir=0
#en el caso de usar el modo 2 o 3 se debe especificar la fuerza laboral
fuerzaLaboralConstante=40
#Solucion del plan de produccion e impresion
aggPlan=aggProdPlan(lambda=unlist(fcData[2], use.names=FALSE),
tPeriods=horizonte,
lDays=vectorDiasLaborales,
W0=trabajadoresIniciales,
I0=inventarioInicial,
B0=backordersInicial,
wages=salarios,
hire=costoContratar,
fire=costoDespedir,
hold=costoAlmacen,
backOrder=costoBackorder,
pCost=costoProducir,
pLastPeriod=produccionPAnterior,
wLastPeriod=trabajadoresPAnterior,
dLastPeriod=diasLaboralesPAnterior,
levelWf = fuerzaLaboralConstante,
mode = modo)
#Carga de paquetes
library(readxl)
library(ggplot2)
source('forecastAndAggProdFunctions.R')
#---------Carga de datos
#Lee los datos del archivo de excel, en este ejemplo se saltan las primeras 10 filas pues no contienen datos relevantes,
#tambien se especifica la columna en la que se encuentran los datos
#Inputs para carga de Excel
pathArchivo="DAUPSA.xlsx"
saltos=10
columnaDatos=2
conTitulos=TRUE
#Carga de archivo e impresion de resultados
excelData <- read_excel(pathArchivo, skip = saltos, col_names = conTitulos)
print(excelData)
#-------Hacemos serie de tiempo, se debe especificar el inicio o el fin de la serie de tiempo, asi como su frecuencia,
#para esta solucion es necesario indicar el fin de la serie de tiempo.
#Inputs para creacion de serie de tiempo
frecuencia=12 #ie numero de periodos en un a単o
anoFin=2020
mesFin=7
#Creacion de serie de tiempo e impresion de resultados
tsData <- ts(excelData[,columnaDatos], end = c(anoFin,mesFin), frequency = frecuencia)
print(tsData)
#-------Realizacion del pronostico, se identifica automaticamente si es posible pronosticar con los datos cargados,
#en ese caso se selecciona el mejor metodo para realizarlo y se devuelve la serie de tiempo del pronostico
#Inputs para realizar el pronostico
horizonte=6 #ie periodos a futuro que se desean pronosticar
#Realizacion del pronostico y graficacion de resultados
fcData=forecastToh(ts=tsData,endTs = c(anoFin,mesFin),f=frecuencia,hF=horizonte)
autoplot(tsData) + xlab("Year") + ylab("Demand") +
autolayer(fcData, PI=FALSE, series = paste(fcData$method,"forecast"))
print(fcData)
#-------Construccion del plan agregado de produccion, se deben especificar los datos de produccion del periodo anterior,
#al igual que las condiciones iniciales de trabajadores, inventario y backorders, y los datos de costos de cada variable
#Inputs para realizar el plan agregado de produccion
modo=3  #el tipo de plan a realizar,
#1=base model
#2=level workforce
#3=no backorders
#4=no inventory/backorders
diasLaboralesPAnterior=260
produccionPAnterior=41383
trabajadoresPAnterior=40
vectorDiasLaborales=c(21,20,23,21,22,22)
trabajadoresIniciales=35
inventarioInicial=0
backordersInicial=0
salarios=120
costoContratar=450
costoDespedir=600
costoAlmacen=5
costoBackorder=15
costoProducir=0
#en el caso de usar el modo 2 o 3 se debe especificar la fuerza laboral
fuerzaLaboralConstante=40
#Solucion del plan de produccion e impresion
aggPlan=aggProdPlan(lambda=unlist(fcData[2], use.names=FALSE),
tPeriods=horizonte,
lDays=vectorDiasLaborales,
W0=trabajadoresIniciales,
I0=inventarioInicial,
B0=backordersInicial,
wages=salarios,
hire=costoContratar,
fire=costoDespedir,
hold=costoAlmacen,
backOrder=costoBackorder,
pCost=costoProducir,
pLastPeriod=produccionPAnterior,
wLastPeriod=trabajadoresPAnterior,
dLastPeriod=diasLaboralesPAnterior,
levelWf = fuerzaLaboralConstante,
mode = modo)
install.packages("rSymPy")
c0<-100
c1<-0.75
G<-50
I<-30
T<-100
Tg<-0
C<-c0+c1*(Y-T+Tg)
var<-Y
C<-c0+c1*(Y-T+Tg)
library(rSymPy)
c0=100
c1=0.75
G=50
I=30
T=100
Tg=75
b0=0
b1=0
b2=0
alfa=1/(1-c1*(1-t1)-b1)
t1=0
alfa=1/(1-c1*(1-t1)-b1)
alfa<-1/(1-c1*(1-t1)-b1)
A0<-function(i){
return(c0-c1*T+b0-b2*i+G)
}
A0
b1=0
b2=0
i=0
alfa<-1/(1-c1*(1-t1)-b1)
A0<-function(i){
return(c0-c1*T+b0-b2*i+G)
}
A0(0)
Z=alfa*A0
Z=alfa*A0_1
A0_1<-A0(0)
Z=alfa*A0_1
Z=alfa*A0_1
Z1=alfa*A0_1
#input
c0=100
c1=0.75
G=50
I=30
T=110
t1=0
Tg=95
b0=0
b1=0
b2=0
i=0
alfa<-1/(1-c1*(1-t1)-b1)
A0<-function(i){
return(c0-c1*T+b0-b2*i+G)
}
A0_1<-A0(0)
Z=alfa*A0_1
C=c0+c1*(Z1-T+tG)
C=c0+c1*(Z1-T+Tg)
C=c0+c1*(Z1-T)+Tg
C2<-c0+c1*(Z-T)+Tg
